{"version":3,"sources":["utilities/utilities.js","components/Login/Login.js","components/Dashboard/Dashboard.js","components/MyBooking/MyBooking.js","serviceWorker.js","index.js","App.js"],"names":["base_url","show_toast","msg","title","type","backgroundColor","iziToast","show","message","position","progressBar","Login","props","state","username","password","redirect","handleUsernameChange","bind","handlePasswordChange","handleSubmit","e","this","setState","target","value","event","preventDefault","axios","post","then","response","data","status","Cookies","set","user","_id","path","catch","console","log","to","cookie","get","className","onSubmit","id","placeholder","required","autoComplete","onChange","React","Component","Dashboard","uid","booking_date","getFormattedDate","starttime","endtime","redirectToMyBooking","HandleCheckChange","HandleDateChange","HandleStartTimeChange","HandleEndTimeChange","HandleSubmit","HandleMyBookingClick","HandleLogoutClick","length","currenttime","Math","floor","Date","getTime","period","starttime_ts","setHours","endtime_ts","setTimeout","window","location","href","base_web_url","remove","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onClick","name","checked","htmlFor","bookingDate","onDateChange","startTime","onStartTimeChange","endTime","onEndTimeChange","BookingDay","HandleBookingDateChange","StartTime","rows","i","getHours","push","TimeRow","counter","am_pm","EndTime","key","today","setDate","getDate","dd","mm","getMonth","yyyy","getFullYear","moment","require","MyBooking","redirectToDashboard","bookings","isLoading","HandleNewBookingClick","error","alert","Loader","UpcomingBooking","PastBookings","booking","Booking","past","booking_id","day","unix","parseInt","format","data-booking-id","isPast","CancelRequired","CancelBooking","HandleCancelClick","confirmAlert","buttons","label","reload","Boolean","hostname","match","ReactDOM","render","exact","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.edc550e0.chunk.js","sourcesContent":["/* showing easy toast function */\nimport iziToast from \"izitoast\";\n\n// export const base_url = \"https://bookingzone.herokuapp.com/api/\";\nexport const base_url = \"http://localhost:3000/api/\";\n\n// export const base_web_url = \"https://bookingzone.herokuapp.com/\";\nexport const base_web_url = \"http://localhost:3000/\";\n\n\nexport function show_toast(msg, title, type)\n{\n    let backgroundColor,color;\n    if(type===\"fail\")\n    {\n        backgroundColor= '#f5571d';\n        color= 'white';\n    }\n    if(type===\"success\")\n    {\n        backgroundColor= '#25b864';\n    }\n    iziToast.show({\n        title: title,\n        message: msg,\n        backgroundColor: backgroundColor,\n        position: \"topCenter\",\n        progressBar: false\n    });\n}\n","import React from 'react';\nimport { Redirect } from 'react-router-dom'\nimport './style.css'\nimport axios from 'axios';\nimport Cookies from 'universal-cookie';\nimport {base_url, show_toast} from \"../../utilities/utilities\";\n\n\nclass Login extends React.Component\n{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            username: \"\",\n            password: \"\",\n            redirect: false\n        };\n\n        this.handleUsernameChange = this.handleUsernameChange.bind(this);\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleUsernameChange(e){\n        this.setState({username : e.target.value});\n    }\n\n    handlePasswordChange(e){\n        this.setState({password: e.target.value});\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        let username = this.state.username;\n        let password = this.state.password;\n\n        axios.post(base_url+'login/',{\n            username : username,\n            password: password\n        }).then((response) => {\n           let data = response.data;\n\n           if(data.status===1)\n           {\n               // saving the uid to the cookie\n               const cookies = new Cookies();\n               cookies.set(\"uid\",data.user._id,{ path: '/' });\n\n               this.setState({\n                   redirect : true\n               });\n           }\n           else\n                show_toast(data.msg,\"\",\"fail\");\n        }).catch(function(e){\n            console.log(e);\n        });\n    }\n\n\n\n    render(){\n        if(this.state.redirect === true)\n        {\n            return <Redirect to='/dashboard' />\n        }\n        /* checking cookie setting redirect to dashboard if cookie is set */\n        let cookie = new Cookies();\n        if(typeof cookie.get(\"uid\")!==\"undefined\" && cookie.get(\"uid\")!==\"\")\n        {\n            return <Redirect to='/dashboard' />\n        }\n\n        return(\n            <div className=\"container\">\n                <div className=\"col align-self-center login_page_heading\">\n                    <h2>Booking Zone</h2>\n                    <h4>All your facility booking now a click away!</h4>\n                </div>\n\n                <div className=\"login_form_wrapper\">\n                    <form onSubmit={this.handleSubmit}>\n                        <h4 className='form_heading'>Login</h4>\n                        <div className=\"form-group\">\n                            <input id=\"username\" type=\"text\" className=\"form-control\" placeholder=\"Enter username\" required autoComplete=\"off\" onChange={this.handleUsernameChange}/>\n                        </div>\n                        <div className=\"form-group\">\n                            <input id=\"password\" type=\"password\" className=\"form-control\" placeholder=\"Enter password\" required autoComplete=\"off\" onChange={this.handlePasswordChange}/>\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Login;","import React from 'react';\nimport { Redirect } from 'react-router-dom'\nimport './style.css'\nimport axios from 'axios';\nimport Cookies from \"universal-cookie\";\nimport 'izitoast/dist/css/iziToast.min.css';\nimport {base_url, base_web_url, show_toast} from \"../../utilities/utilities\";\n\nclass Dashboard extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        const cookie = new Cookies();\n        this.state = {\n            uid: cookie.get('uid'),\n            booking_date: getFormattedDate(),\n            event: 'TENNIS',\n            starttime: 9,\n            endtime : 10,\n            redirectToMyBooking : false\n        };\n\n        this.HandleCheckChange = this.HandleCheckChange.bind(this);\n        this.HandleDateChange = this.HandleDateChange.bind(this);\n        this.HandleStartTimeChange = this.HandleStartTimeChange.bind(this);\n        this.HandleEndTimeChange = this.HandleEndTimeChange.bind(this);\n        this.HandleSubmit = this.HandleSubmit.bind(this);\n        this.HandleMyBookingClick = this.HandleMyBookingClick.bind(this);\n        this.HandleLogoutClick = this.HandleLogoutClick.bind(this);\n    }\n\n    /* for detecting change in activity selection */\n    HandleCheckChange(e)\n    {\n        this.setState({event : e.target.value});\n    }\n    /* for detecting change of the date picker */\n    HandleDateChange(booking_date){\n        this.setState({booking_date : booking_date});\n    }\n    /* for detecting change of the startime selector */\n    HandleStartTimeChange(starttime){\n        this.setState({starttime : starttime});\n    }\n    /* for detecting change of the startime selector */\n    HandleEndTimeChange(endtime){\n        this.setState({endtime : endtime});\n    }\n    /* handling click of My Booking button */\n    HandleMyBookingClick(e){\n        this.setState({\n            redirectToMyBooking : true\n        });\n    }\n    /* Handling on submit action of the form */\n    HandleSubmit(e){\n        e.preventDefault();\n        if(typeof this.state.starttime!== \"undefined\" && typeof this.state.endtime!== \"undefined\" && typeof this.state.booking_date!== \"undefined\" && this.state.booking_date.length>0)\n        {\n                /* preparing the data for ajax call */\n            /* validation if all is correct */\n            let starttime = this.state.starttime;\n            let endtime = this.state.endtime;\n            let currenttime = Math.floor((new Date().getTime())/1000);\n            if(starttime>endtime)\n            {\n                // alert('The start time is after end time. Please select a proper start time');\n                show_toast('The start time is after end time. Please select a proper start time','','fail');\n                return;\n            }\n            if(starttime === endtime)\n            {\n                // alert('Start time cannot be same with end time. Please select a proper start and end time');\n                show_toast('Start time cannot be same with end time. Please select a proper start and end time','','fail');\n                return;\n            }\n            let period = (endtime - starttime)+\" hrs\";\n\n            let booking_date = new Date(this.state.booking_date);\n            let starttime_ts = (booking_date.setHours(starttime,0,0,0))/1000;\n            let endtime_ts = (booking_date.setHours(endtime,0,0,0))/1000;\n\n            /* checking if booking is not for a old day */\n            if(currenttime>starttime_ts || currenttime>endtime_ts)\n            {\n                // alert('Please select day as today or some upcoming day');\n\n                // iziToast.show({\n                //     message: 'Please select day as today or some upcoming day'\n                // });\n                show_toast('Please select day as today or some upcoming day','','fail');\n                return;\n            }\n            let uid = this.state.uid;\n            let event = this.state.event;\n\n            /* Making API call for creating new booking */\n            axios.post(base_url+'bookings/new/',{\n                uid : uid,\n                starttime: starttime_ts,\n                endtime: endtime_ts,\n                event: event,\n                period: period\n            }).then((response) => {\n                let data = response.data;\n                if(data.status===1)\n                {\n                    // alert(data.msg);\n                    // iziToast.show({\n                    //     message: data.msg\n                    // });\n                    show_toast(data.msg,'','success');\n                    setTimeout(()=> {\n                        window.location.href = base_web_url+\"dashboard/my-booking\";\n                    },2000)\n                }\n                if (data.status===0)\n                {\n                    // alert(data.msg);\n                    // iziToast.show({\n                    //     message: data.msg\n                    // });\n                    show_toast(data.msg,'','fail');\n                }\n            }).catch(function(e){\n                console.log(e);\n            });\n        }\n        else\n            show_toast('Please select proper date and timings','','fail');\n\n    }\n\n    /* handling logput change */\n    HandleLogoutClick(e)\n    {\n        const cookie = new Cookies();\n        cookie.remove('uid',{ path: '/' });\n\n        this.setState({\n            uid: \"\"\n        })\n    }\n\n    render() {\n        /* rediecting to my booking page */\n        if(this.state.redirectToMyBooking === true)\n        {\n            return <Redirect to='/dashboard/my-booking' />\n        }\n        /* redirecting to login if uid is not present */\n        if(typeof this.state.uid=== \"undefined\" || this.state.uid=== \"\")\n        {\n            return(\n                <Redirect to='/login' />\n            );\n        }\n        return(\n            <div>\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                    <a className=\"navbar-brand mb-0 h1\" href=\"dashboard/\">BookingZone</a>\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                            data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                            aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div className=\"collapse navbar-collapse justify-content-end\" id=\"navbarSupportedContent\">\n                        <div className=\"navbar-nav\">\n                            <div className=\"nav-item nav-link\" onClick={this.HandleMyBookingClick}>My Bookings</div>\n                            <div className=\"nav-item nav-link\" onClick={this.HandleLogoutClick}>Logout</div>\n                        </div>\n                    </div>\n                </nav>\n                <div className=\"dashboard_container container\">\n\n                    <h3 className=\"intro_msg display-4\">What would you like to book today?</h3>\n\n                    <div className=\"booking_wrapper\">\n                        <form onSubmit={this.HandleSubmit}>\n                            <div className=\"activity_wrapper\">\n                                <h4>Activities </h4>\n                                <div className=\"activity_select_wrapper\">\n                                    <div className=\"form-check\">\n                                        <input className=\"form-check-input\" type=\"radio\" name=\"activity\" value=\"TENNIS\" checked={this.state.event===\"TENNIS\"} onChange={this.HandleCheckChange} id=\"activity1\"/>\n                                        <label className=\"form-check-label\" htmlFor=\"activity1\">Tennis Court</label>\n                                    </div>\n                                    <div className=\"form-check\">\n                                        <input className=\"form-check-input\" type=\"radio\" name=\"activity\" value=\"SWIMMING\" checked={this.state.event===\"SWIMMING\"} onChange={this.HandleCheckChange} id=\"activity2\"/>\n                                        <label className=\"form-check-label\" htmlFor=\"activity2\">Swimming Pool</label>\n                                    </div>\n                                    <div className=\"form-check\">\n                                        <input className=\"form-check-input\" type=\"radio\" name=\"activity\" value=\"BADMINTON\" checked={this.state.event===\"BADMINTON\"} onChange={this.HandleCheckChange} id=\"activity3\"/>\n                                        <label className=\"form-check-label\" htmlFor=\"activity3\">Badminton</label>\n                                    </div>\n                                    <div className=\"form-check\">\n                                        <input className=\"form-check-input\" type=\"radio\" name=\"activity\" value=\"GYM\" checked={this.state.event===\"GYM\"} onChange={this.HandleCheckChange} id=\"activity4\"/>\n                                        <label className=\"form-check-label\" htmlFor=\"activity4\">Gym</label>\n                                    </div>\n                                    <div className=\"form-check\">\n                                        <input className=\"form-check-input\" type=\"radio\" name=\"activity\" value=\"CLUBHOUSE\" checked={this.state.event===\"CLUBHOUSE\"} onChange={this.HandleCheckChange} id=\"activity5\"/>\n                                        <label className=\"form-check-label\" htmlFor=\"activity5\">Club House</label>\n                                    </div>\n                                    <div className=\"form-check\">\n                                        <input className=\"form-check-input\" type=\"radio\" name=\"activity\" value=\"CYCLE\" checked={this.state.event===\"CYCLE\"} onChange={this.HandleCheckChange} id=\"activity6\"/>\n                                        <label className=\"form-check-label\" htmlFor=\"activity6\">Cycle Track</label>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"time_selector_wrapper\">\n                                <h4>Day and Time</h4>\n                                <div className=\"time_selector\">\n\n                                    <BookingDay bookingDate={this.state.booking_date} onDateChange={this.HandleDateChange}/>\n\n                                    <StartTime startTime = {this.state.starttime} onStartTimeChange={this.HandleStartTimeChange}/>\n\n                                    <EndTime endTime = {this.state.endtime} onEndTimeChange={this.HandleEndTimeChange}/>\n                                </div>\n                            </div>\n\n                            <div className=\"confirm_booking_wrapper\">\n                                <button type=\"submit\" className=\"btn btn-primary booking_submit\">Confirm Booking</button>\n                            </div>\n\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass BookingDay extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.HandleBookingDateChange = this.HandleBookingDateChange.bind(this);\n    }\n\n    HandleBookingDateChange(e)\n    {\n        this.props.onDateChange(e.target.value);\n    }\n\n    render()\n    {\n        return (\n            <div className=\"form-group\">\n                <label htmlFor=\"booking_day\">Booking Day</label>\n                <input className=\"form-control\" type=\"date\" id=\"booking_day\" value={this.props.bookingDate} onChange={this.HandleBookingDateChange}/>\n            </div>\n        );\n    }\n}\n\n/* creates the start time selector */\nclass StartTime extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.HandleStartTimeChange = this.HandleStartTimeChange.bind(this);\n    }\n\n    HandleStartTimeChange(e){\n        this.props.onStartTimeChange(e.target.value);\n    }\n\n    render() {\n        let rows = [];\n        let time = new Date().getHours();\n\n\n        for(let i=9;i<=21;i++) {\n            // let timevalue= (time.setHours(i, 0, 0, 0)/1000);\n            rows.push(\n                <TimeRow counter={i} am_pm={i>=12?'P.M.':'A.M.'}/>\n            );\n        }\n\n        return(\n            <div className=\"form-group\">\n                <label htmlFor=\"starttime\">Start Time</label>\n                <select className=\"form-control\" id=\"starttime\" value={this.props.startTime} onChange={this.HandleStartTimeChange}>\n                    {rows}\n                </select>\n            </div>\n        )\n    }\n}\n\n/* creates the end time selector */\nclass EndTime extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.HandleEndTimeChange = this.HandleEndTimeChange.bind(this);\n    }\n\n    HandleEndTimeChange(e)\n    {\n        this.props.onEndTimeChange(e.target.value);\n    }\n\n\n    render(){\n\n        let rows = [];\n\n        for(let i=10;i<=22;i++) {\n            rows.push(\n                <TimeRow counter={i}/>\n            );\n        }\n\n        return(\n            <div className=\"form-group\">\n                <label htmlFor=\"endtime\">End Time</label>\n                <select className=\"form-control\" id=\"endtime\" value={this.props.endTime} onChange={this.HandleEndTimeChange}>\n                    {rows}\n                </select>\n            </div>\n        );\n    }\n}\n\nfunction TimeRow(props)\n{\n    return(\n        <option value={props.counter} key={props.counter}>{props.counter}:00 </option>\n    )\n}\n\n/* utility function for converting date to required format */\nfunction getFormattedDate()\n{\n    var today = new Date();\n    if(today.getHours()>22)\n    {\n        today.setDate(today.getDate()+1);\n    }\n    var dd = today.getDate();\n    var mm = today.getMonth() + 1; //January is 0!\n\n    var yyyy = today.getFullYear();\n    if (dd < 10) {\n        dd = '0' + dd;\n    }\n    if (mm < 10) {\n        mm = '0' + mm;\n    }\n    today = yyyy + '-' + mm + '-' + dd;\n   return today;\n}\n\nexport default Dashboard;","import React from 'react';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport './style.css';\nimport Cookies from \"universal-cookie\";\nimport 'izitoast/dist/css/iziToast.min.css';\nimport {base_url, show_toast} from \"../../utilities/utilities\";\n\nvar moment = require('moment');\n\n\nclass MyBooking extends React.Component{\n    constructor(props)\n    {\n        super(props);\n        const cookie = new Cookies();\n        this.state ={\n            uid : cookie.get('uid'),\n            redirectToDashboard : false,\n            bookings: [],\n            isLoading: true\n        };\n\n        this.HandleNewBookingClick = this.HandleNewBookingClick.bind(this);\n        this.HandleLogoutClick = this.HandleLogoutClick.bind(this);\n    }\n\n    HandleNewBookingClick(e)\n    {\n        this.setState({\n            redirectToDashboard : true\n        })\n    }\n\n    /* fetching user active booking before component mounting */\n    componentDidMount() {\n        axios.post(base_url+'bookings/user/',{\n            uid: this.state.uid\n        })\n            .then((response) => {\n                // handle success\n                this.setState({bookings: response.data.bookings,\n                isLoading: false});\n                console.log(response);\n            })\n            .catch(function (error) {\n                alert('Cannot connect to server');\n                console.log(error);\n            });\n    }\n\n    /* handling logput change */\n    HandleLogoutClick(e)\n    {\n        const cookie = new Cookies();\n        cookie.remove('uid',{ path: '/' });\n\n        this.setState({\n            uid: \"\"\n        })\n    }\n\n    render(){\n        if(this.state.redirectToDashboard)\n            return(\n                <Redirect to='/dashboard' />\n            );\n\n        if(this.state.isLoading)\n        {\n            return(\n                <Loader/>\n            )\n        }\n\n        if(typeof this.state.uid=== \"undefined\" || this.state.uid=== \"\")\n        {\n            return(\n                <Redirect to='/login' />\n            );\n        }\n\n        return(\n           <div>\n               <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                   <a className=\"navbar-brand mb-0 h1\" href=\"dashboard/\">BookingZone</a>\n                   <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                       <span className=\"navbar-toggler-icon\"></span>\n                   </button>\n                   <div className=\"collapse navbar-collapse justify-content-end\" id=\"navbarSupportedContent\">\n                       <div className=\"navbar-nav\">\n                           <div className=\"nav-item nav-link\" onClick={this.HandleNewBookingClick}>New Booking</div>\n                           <div className=\"nav-item nav-link\" onClick={this.HandleLogoutClick}>Logout</div>\n                       </div>\n                   </div>\n               </nav>\n               <Loader isLoading={this.state.isLoading}/>\n               {\n                   this.state.bookings.length?\n                   <div className=\"mybooking_container container\">\n                   <UpcomingBooking bookings={this.state.bookings}/>\n\n                   <PastBookings bookings={this.state.bookings}/>\n                   </div> :\n                   <div className=\"empty_bookings\">\n                       No Bookings Found!<br />\n                       Go to New Bookings and make your first Booking!\n                   </div>\n               }\n\n           </div>\n        )\n    }\n}\n\n/* rendering the upcoming bookings section */\n/**\n * @return {null}\n */\nfunction UpcomingBooking(props)\n{\n    let currenttime = Math.floor((new Date().getTime())/1000);\n    let rows=[];\n    for(let i=0;i<props.bookings.length;i++)\n    {\n        let booking = props.bookings[i];\n        if(booking.starttime>currenttime)\n        {\n            rows.push(<Booking past=\"\" booking_id={booking._id} event={booking.event} day={moment.unix(parseInt(booking.starttime)).format('Do MMM YYYY')} starttime={moment.unix(parseInt(booking.starttime)).format('hh:mm A')} endtime={moment.unix(parseInt(booking.endtime)).format('hh:mm A')}/>)\n        }\n    }\n    if(rows.length>0)\n        return(\n            <div className=\"upcoming_bookings_wrapper\">\n                <h3>Upcoming Bookings</h3>\n                {rows}\n            </div>\n        );\n    else\n        return null;\n}\n\n/* rendering the past bookings section */\n/**\n * @return {null}\n */\nfunction PastBookings(props)\n{\n    let currenttime = Math.floor((new Date().getTime())/1000);\n    let rows=[];\n    for(let i=0;i<props.bookings.length;i++)\n    {\n        let booking = props.bookings[i];\n        if(booking.starttime<currenttime)\n        {\n            rows.push(<Booking past=\"past\" booking_id={booking._id} event={booking.event} day={moment.unix(parseInt(booking.starttime)).format('Do MMM YYYY')} starttime={moment.unix(parseInt(booking.starttime)).format('hh:mm A')} endtime={moment.unix(parseInt(booking.endtime)).format('hh:mm A')}/>)\n        }\n    }\n\n    if(rows.length>0)\n        return(\n            <div className=\"past_bookings\">\n                <h3>Past Bookings</h3>\n                {rows}\n            </div>\n        );\n    else\n        return null;\n}\n\nfunction Booking(props)\n{\n    return(\n        <div className={'booking_wrapper '+props.past} data-booking-id={props.booking_id}>\n            <div className=\"event\">Event : <span className=\"event_name\">{props.event}</span></div>\n            <div className=\"day_wrapper\">Day : <span className=\"day\">{props.day} </span></div>\n            <div className=\"time_wrapper\">Time : <span className=\"time\"><span className=\"starttime\">{props.starttime}</span> To <span\n                className=\"endtime\">{props.endtime}</span></span>\n            </div>\n            {CancelRequired(props.past,props.booking_id)}\n        </div>\n    );\n}\n\nclass CancelBooking extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.HandleCancelClick = this.HandleCancelClick.bind(this);\n    }\n\n    HandleCancelClick(e)\n    {\n        confirmAlert({\n            title: 'Confirm to cancel booking',\n            message: 'Are you sure to do this?',\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: () => {\n                        axios.post(base_url+'bookings/cancel/',{\n                            'booking_id':this.props.booking_id\n                        }).then((response) => {\n                            let data = response.data;\n                            if(data.status===1)\n                            {\n                                // alert(data.msg);\n                                show_toast(data.msg,'','success');\n                                //todo : find a more effeient way to refresh page\n                                window.location.reload();\n                            }\n                            if (data.status===0)\n                            {\n                                alert(data.msg);\n                            }\n                        }).catch(function(e){\n                            console.log(e);\n                        });\n                    }\n                },\n                {\n                    label: 'No',\n                }\n            ]\n        });\n    }\n\n\n    render()\n    {\n        return(\n        <div className=\"cancel_booking float-right\" onClick={this.HandleCancelClick}>\n            Cancel Booking\n        </div>\n    )}\n}\n\nfunction CancelRequired(isPast,booking_id)\n{\n    if(!isPast) {\n        return (\n            <CancelBooking booking_id={booking_id}/>\n        )\n    }\n}\n\n/**\n * @return {null}\n */\nfunction Loader(props)\n{\n    if(props.isLoading)\n        return(\n            <div className=\"loader\"></div>\n        );\n    else\n        return null;\n}\n\nexport default MyBooking;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/js/bootstrap.bundle.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Login from './components/Login/Login';\nimport Dashboard from './components/Dashboard/Dashboard'\nimport MyBooking from \"./components/MyBooking/MyBooking\";\n\nexport default function App() {\n  return (\n      <Router>\n        <div>\n          {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n          <Switch>\n            <Route exact path=\"/dashboard\" component={Dashboard}>\n              <Dashboard />\n            </Route>\n            <Route path=\"/dashboard/my-booking\" component={MyBooking}>\n              <MyBooking />\n            </Route>\n            <Route path=\"/login\" component={Login}>\n              <Login />\n            </Route>\n            <Route path=\"/\" component={Login}>\n              <Login />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n  );\n}"],"sourceRoot":""}